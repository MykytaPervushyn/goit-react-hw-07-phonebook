{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contacts/actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","contact","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","className","s","contactForm","onSubmit","preventDefault","formWrap","label","input","type","onChange","pattern","title","required","button","getFiltredContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","ContactList","contacts","useSelector","state","contactsReducer","map","onClick","Filter","target","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","loading","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0819b518.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3D3jw\",\"input\":\"Filter_input__1QrWU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__1VvIc\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/add', contact => ({\r\n    payload: {\r\n      id: uuidv4(),\r\n      ...contact,\r\n    },\r\n}));\r\n\r\nexport const deleteContact = createAction('contacts/delete', id => {\r\n  return {\r\n    payload: {\r\n      id,\r\n    },\r\n  }\r\n});\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport {addContact} from '../../redux/contacts/actions'\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const contact = addContact({ name: name, number: number });\r\n    \r\n    dispatch(addContact(contact));\r\n    \r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  \r\n\r\n  return (\r\n    <form className={s.contactForm}\r\n      onSubmit={handleSubmit}\r\n    >\r\n        <div className={s.formWrap}>\r\n          <label className={s.label}>\r\n            Name{' '}\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number{' '}\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              value={number}\r\n              onChange={handleChange}\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <button className={s.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  contacts: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteContact } from '../../redux/contacts/actions';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = () =>{\r\n  const contacts = useSelector(state => getFiltredContacts(state.contacts.contactsReducer, state.contacts.filter));\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.payload.id}>\r\n          {contact.payload.name}: {contact.payload.number}\r\n          <button className={s.button} onClick={() => dispatch(deleteContact(contact.id))}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nconst getFiltredContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter((contact) =>\r\n    contact.payload.name.toLowerCase().includes(normalizedFilter));\r\n  };\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/actions';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input className={s.input} type=\"text\" value={value} onChange={(e) => dispatch(changeFilter(e.target.value))} />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm/>\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  )\r\n}","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './actions';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [addContact]: (state, {payload}) => [...state, payload],\r\n  [deleteContact]: (state, {payload}) => state.filter(({ id }) => id !== payload.id),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, {payload}) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    contactsReducer,\r\n    filter,\r\n});","import { configureStore, } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger'\r\nimport reducer from './contacts/reducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n  contacts: persistReducer (contactsPersistConfig, reducer),\r\n},\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,]\r\n    }\r\n  }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  \r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store'\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <Provider store={store.store}>\r\n    <PersistGate loading={null} persistor ={store.persistor}>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1U8uF\",\"formWrap\":\"ContactForm_formWrap__3p4qb\",\"label\":\"ContactForm_label__iC0-F\",\"input\":\"ContactForm_input__pItlp\",\"button\":\"ContactForm_button__36WLv\"};"],"sourceRoot":""}