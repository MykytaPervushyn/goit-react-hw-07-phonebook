{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","redux/contacts/contactsSlice.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/actions.js","redux/contacts/reducer.js","redux/store.js","index.js"],"names":["module","exports","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","contactContent","body","name","number","console","log","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","ContactForm","contacts","useState","setName","setNumber","isLoading","handleChange","e","currentTarget","value","reset","className","s","contactForm","onSubmit","preventDefault","find","contact","alert","elements","formWrap","label","input","type","onChange","pattern","title","required","button","disabled","ContactListItem","id","isDeleting","onClick","ContactList","map","Filter","App","filter","setFilter","data","isFetching","target","toLowerCase","includes","addContact","createAction","payload","uuidv4","changeFilter","contactsReducer","createReducer","state","_","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad1c8721.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1U8uF\",\"formWrap\":\"ContactForm_formWrap__3p4qb\",\"label\":\"ContactForm_label__iC0-F\",\"input\":\"ContactForm_input__pItlp\",\"button\":\"ContactForm_button__36WLv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3D3jw\",\"input\":\"Filter_input__1QrWU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__3QBab\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactsApi = createApi({\r\n    reducerPath: 'contactsApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://61c092f733f24c00178234dd.mockapi.io/' }),\r\n    tagTypes: ['Contact'],\r\n    endpoints: builder => ({\r\n        fetchContacts: builder.query({\r\n            query: () => `/contacts`,\r\n            providesTags: ['Contact'],\r\n        }),\r\n        deleteContact: builder.mutation({\r\n            query: (contactId) => ({\r\n                url: `/contacts/${contactId}`,\r\n                method: 'DELETE',\r\n            }),\r\n            invalidatesTags: ['Contact'],\r\n        }),\r\n        createContact: builder.mutation({\r\n            query: contactContent => ({\r\n                url: '/contacts',\r\n                method: 'POST',\r\n                body: {\r\n                    name: contactContent.name,\r\n                    number: contactContent.number,\r\n                },\r\n            }),\r\n            invalidatesTags: ['Contact'],\r\n        })\r\n    })\r\n})\r\nconsole.log(contactsApi);\r\n\r\nexport const {\r\n    useFetchContactsQuery,\r\n    useDeleteContactMutation,\r\n    useCreateContactMutation,\r\n} = contactsApi;","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { useCreateContactMutation } from '../../redux/contacts/contactsSlice';\r\n\r\nexport default function ContactForm({contacts}) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const [createContact, {isLoading}] = useCreateContactMutation();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      return alert(`${name} is already in contacts`) || reset();\r\n    } else if (contacts.find(contact => contact.number === number)) {\r\n      return alert(`${number} is already in contacts`) || reset();\r\n    }\r\n    \r\n    createContact({\r\n      name: e.currentTarget.elements.name.value,\r\n      number: e.currentTarget.elements.number.value,\r\n    });\r\n    reset();\r\n\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  \r\n\r\n  return (\r\n    <form className={s.contactForm}\r\n      onSubmit={handleSubmit}\r\n    >\r\n        <div className={s.formWrap}>\r\n          <label className={s.label}>\r\n            Name{' '}\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number{' '}\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              value={number}\r\n              onChange={handleChange}\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <button className={s.button} type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? 'Loading...' : 'Add contact'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  contacts: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nimport { useDeleteContactMutation } from '../../redux/contacts/contactsSlice';\r\n\r\nconst ContactListItem = ({id, name, number}) =>{\r\n\r\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <li>\r\n        {name}: {number}\r\n        <button className={s.button} onClick={() => deleteContact(id)} disabled={isDeleting}>\r\n            {isDeleting ? 'Deleting...' : 'Delete'}\r\n        </button> \r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nconst ContactList = ({contacts, }) =>{\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (<ContactListItem key={contact.id} {...contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({onChange}) => {\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input className={s.input} type=\"text\"\r\n        onChange={ onChange } />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport { useFetchContactsQuery, } from './redux/contacts/contactsSlice';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const { data: contacts, isFetching } = useFetchContactsQuery();\r\n  console.log(contacts);\r\n\r\n  const getFiltredContacts = data =>\r\n    data.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n\r\n  const handleChange = e => {\r\n    setFilter(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm contacts={contacts}/>\r\n      <h2>Contacts</h2><Filter onChange={handleChange}/>\r\n      {!isFetching && <ContactList contacts={getFiltredContacts(contacts)}\r\n      />}\r\n    </div>\r\n  )\r\n}","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/add', contact => ({\r\n    payload: {\r\n      id: uuidv4(),\r\n      ...contact,\r\n    },\r\n}));\r\n\r\nexport const deleteContact = createAction('contacts/delete', id => {\r\n  return {\r\n    payload: {\r\n      id,\r\n    },\r\n  }\r\n});\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './actions';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [addContact]: (state, {payload}) => [...state, payload],\r\n  [deleteContact]: (state, {payload}) => state.filter(({ id }) => id !== payload.id),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, {payload}) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    contactsReducer,\r\n    filter,\r\n});","import { configureStore, } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger'\r\nimport reducer from './contacts/reducer';\r\nimport { contactsApi } from './contacts/contactsSlice';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts:\r\n        reducer\r\n    ,\r\n    [contactsApi.reducerPath]: contactsApi.reducer\r\n},\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,]\r\n    }\r\n  })\r\n    .concat(contactsApi.middleware)\r\n    .concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  \r\n});\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store'\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n"],"sourceRoot":""}